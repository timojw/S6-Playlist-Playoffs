name: Zap Security Scan
on:
  pull_request:
    branches:
      - main

jobs:
  run-zap:
    permissions: write-all
    runs-on: ubuntu-latest
    environment: e2e tests
    env:
      PLAYWRIGHT_USER: ${{ secrets.PLAYWRIGHT_USER }}
      PLAYWRIGHT_PASSWORD: ${{ secrets.PLAYWRIGHT_PASSWORD }}
      AUDIENCE: ${{ secrets.AUDIENCE }}
      JWK_URL: ${{ secrets.JWK_URL }}
      COMPONENT_HOST: ${{ secrets.COMPONENT_HOST }}
      INFLUXDB_HOST: ${{ secrets.INFLUXDB_HOST }}
      INFLUXDB_PORT: ${{ secrets.INFLUXDB_PORT }}
      INFLUXDB_USER: ${{ secrets.INFLUXDB_USER }}
      INFLUXDB_USER_PASSWORD: ${{ secrets.INFLUXDB_USER_PASSWORD }}
      MONGOURI: ${{ secrets.MONGOURI }}
      PC_PORT: ${{ secrets.PC_PORT }}
    strategy:
      matrix:
        node-version: [20]
    steps:
      - uses: actions/checkout@v4
        with:
          persist-credentials: false
          fetch-depth: 0
      # Setup pnpm
      - uses: pnpm/action-setup@v4
        with:
          version: 8
      - uses: actions/setup-go@v5
        with:
          go-version: '1.22'
      - run: go version
      # Setup nodejs
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'pnpm'
      - name: Set Git identity
        run: |
          git config --global user.name "GitHub Actions Versioning"
          git config --global user.email "versioning@version.com"
          git remote set-url origin https://x-access-token:${{ secrets.ISSUE_PAT }}@github.com/timojw/S6-Playlist-Playoffs.git
      # Install dependencies
      - name: Install dependencies
        run: pnpm install
      - name: Install nx
        run: pnpm install -g nx
      - name: build applications
        run: pnpm run build:all
      - name: Docker login
        run: docker login -u ${{ secrets.DOCKERHUB_USERNAME}} -p ${{secrets.DOCKERHUB_ACCESS_TOKEN}}
      - name: run docker
        run: docker compose up --build -d
      - name: ZAP Scan frontend
        uses: zaproxy/action-baseline@v0.12.0
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          docker_name: 'ghcr.io/zaproxy/zaproxy:stable'
          target: 'http://localhost:80'
