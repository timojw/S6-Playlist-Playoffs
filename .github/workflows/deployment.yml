name: Deployment
on:
  release:
    types: [published]
  workflow_dispatch:

jobs:
  dockerhub-release:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [20]
    steps:
      - uses: actions/checkout@v4
        with:
          persist-credentials: false
          fetch-depth: 0

      - uses: pnpm/action-setup@v4
        with:
          version: 8

      - uses: actions/setup-go@v5
        with:
          go-version: '1.22'

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'pnpm'

      - name: Install dependencies
        run: pnpm install

      - name: Install nx
        run: pnpm install -g nx

      - name: Get application name from tag
        id: get_tag
        run: |
          TAG_NAME=$(echo "${{ github.ref }}" | awk -F'/' '{print $3}')
          APP_NAME=$(echo "${TAG_NAME}" | awk -F'-' '{print $1}')
          echo "Application name: ${APP_NAME}"
          echo "::set-output name=app_name::${APP_NAME}"

      - name: Build application
        run: nx build "${{ steps.get_tag.outputs.app_name }}"

      - name: Docker login
        run: docker login -u ${{ secrets.DOCKERHUB_USERNAME }} -p ${{ secrets.DOCKERHUB_ACCESS_TOKEN }}

      - name: Build Docker image
        run: |
          docker build -t ${{ secrets.DOCKERHUB_USERNAME }}/${{ steps.get_tag.outputs.app_name }}:latest .

      - name: Push Docker image
        run: |
          docker push ${{ secrets.DOCKERHUB_USERNAME }}/${{ steps.get_tag.outputs.app_name }}:latest

  deploy:
    needs: dockerhub-release
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Azure CLI
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Azure CLI - Get AKS credentials
        run: |
          az account set --subscription ${{ secrets.AZURE_SUBSCRIPTION_ID }}
          az aks get-credentials --resource-group ${{ secrets.AZURE_RESOURCE_GROUP }} --name ${{ secrets.AKS_CLUSTER_NAME }}

      - name: Set up Kubectl
        uses: azure/setup-kubectl@v3
        with:
          version: 'latest'

      - name: Get application name from tag
        id: get_tag
        run: |
          TAG_NAME=$(echo "${{ github.ref }}" | awk -F'/' '{print $3}')
          APP_NAME=$(echo "${TAG_NAME}" | awk -F'-' '{print $1}')
          echo "Application name: ${APP_NAME}"
          echo "::set-output name=app_name::${APP_NAME}"

      - name: Deploy to AKS
        run: |
          kubectl set image deployment/${{ steps.get_tag.outputs.app_name }} ${ steps.get_tag.outputs.app_name }}=${{ secrets.DOCKERHUB_USERNAME }}/${{ steps.get_tag.outputs.app_name }}:latest --record
          kubectl rollout restart deployment/${{ steps.get_tag.outputs.app_name }}
