name: Deployment
on:
  release:
    types: [published]
  workflow_dispatch:

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        service-name: [game, voting, krakend, grafana, web]
    steps:
      - uses: actions/checkout@v4
        with:
          persist-credentials: false
          fetch-depth: 0

      - name: Docker login
        run: docker login -u timojw -p ${{ secrets.DOCKERHUB_ACCESS_TOKEN }}

      - name: Build Docker image
        run: |
          if [[ "${{ matrix.service-name }}" == "krakend" ]]; then
            docker build -t timojw/krakend:${{ github.sha }} -t timojw/krakend:latest -f services/gateway/Dockerfile services/gateway
          elif [[ "${{ matrix.service-name }}" == "grafana" ]]; then
            docker build -t timojw/grafana:${{ github.sha }} -t timojw/grafana:latest -f services/gateway/monitoring/grafana/Dockerfile services/gateway/monitoring/grafana
          elif [[ "${{ matrix.service-name }}" == "game" ]]; then
            docker build -t timojw/game:${{ github.sha }} -t timojw/game:latest -f services/game/Dockerfile .
          elif [[ "${{ matrix.service-name }}" == "voting" ]]; then
            docker build -t timojw/voting:${{ github.sha }} -t timojw/voting:latest -f services/voting/Dockerfile .
          elif [[ "${{ matrix.service-name }}" == "web" ]]; then
            docker build -t timojw/web:${{ github.sha }} -t timojw/web:latest -f services/web/playlist-playoffs/Dockerfile services/web/playlist-playoffs
          fi

      - name: Push Docker image
        run: |
          docker push timojw/${{ matrix.service-name }}:${{ github.sha }}
          docker push timojw/${{ matrix.service-name }}:latest

  deploy:
    needs: build-and-push
    runs-on: ubuntu-latest
    strategy:
      matrix:
        service-name: [game, voting, krakend, grafana, web]
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Azure CLI
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Azure CLI - Get AKS credentials
        run: |
          az account set --subscription ${{ secrets.AZURE_SUBSCRIPTION_ID }}
          az aks get-credentials --resource-group ${{ secrets.AZURE_RESOURCE_GROUP }} --name ${{ secrets.AKS_CLUSTER_NAME }}

      - name: Set up Kubectl
        uses: azure/setup-kubectl@v3
        with:
          version: 'latest'

      - name: Deploy to AKS
        run: |
          if [[ "${{ matrix.service-name }}" == "game" ]]; then
            kubectl set image deployment/game-service game-service=timojw/game:${{ github.sha }}
            kubectl rollout restart deployment/game-service
          elif [[ "${{ matrix.service-name }}" == "voting" ]]; then
            kubectl set image deployment/voting-service voting-service=timojw/voting:${{ github.sha }}
            kubectl rollout restart deployment/voting-service
          elif [[ "${{ matrix.service-name }}" == "krakend" ]]; then
            kubectl set image deployment/krakend krakend=timojw/krakend:${{ github.sha }}
            kubectl rollout restart deployment/krakend
          elif [[ "${{ matrix.service-name }}" == "grafana" ]]; then
            kubectl set image deployment/grafana grafana=timojw/grafana:${{ github.sha }}
            kubectl rollout restart deployment/grafana
          elif [[ "${{ matrix.service-name }}" == "web" ]]; then
            kubectl set image deployment/web web=timojw/web:${{ github.sha }}
            kubectl rollout restart deployment/web
          fi