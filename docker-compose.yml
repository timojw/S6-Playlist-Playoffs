version: '3.8'

networks:
  pp-network:
    driver: bridge

services:
  kafka:
    container_name: kafka
    image: 'bitnami/kafka:latest'
    environment:
      - KAFKA_CFG_NODE_ID=0
      - KAFKA_CFG_PROCESS_ROLES=controller,broker
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092,PLAINTEXTLOCAL://:9094,CONTROLLER://:9093
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT,PLAINTEXTLOCAL:PLAINTEXT
      - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=0@kafka:9093
      - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://kafka:9092,PLAINTEXTLOCAL://localhost:9094
      - KAFKA_CFG_AUTO_CREATE_TOPICS_ENABLE=false
      - KAFKA_CFG_DELETE_TOPICS_ENABLE=false
    networks:
      - pp-network
    ports:
      - '9092:9092'
      - '9093:9093'
      - '9094:9094'
    expose:
      - '9092'
      - '9093'
    volumes:
      - kafka-data:/bitnami/kafka

  # This services creates the topics in the Kafka cluster, afterwards it will exit
  kafka-init:
    container_name: kafka-init
    image: 'bitnami/kafka:latest'
    networks:
      - pp-network
    command: ['/bin/bash', '-c', '/create-topics.sh']
    depends_on:
      - kafka
    volumes:
      - type: bind
        source: ./create-topics.sh
        target: /create-topics.sh
    init: true

  # This service is the Kafka UI, accessible at localhost:8090, allows for easy debugging.
  kafka-ui:
    container_name: kafka-ui
    image: provectuslabs/kafka-ui:latest
    networks:
      - pp-network
    ports:
      - '8090:8080'
    environment:
      DYNAMIC_CONFIG_ENABLED: 'false'
      KAFKA_CLUSTERS_0_NAME: kafka
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: kafka:9092

  game:
    depends_on:
      - kafka
      - kafka-ui
    container_name: game
    image: game-service:latest
    build:
      context: .
      dockerfile: services/game/Dockerfile
    environment:
      KAFKA_BOOTSTRAP_SERVER: kafka:9092
    networks:
      - pp-network
    env_file: services/game/.env
    ports:
      - "8081:8081"

  voting:
    depends_on:
      - kafka
      - kafka-ui
    container_name: voting
    image: voting-service:latest
    build:
      context: .
      dockerfile: services/voting/Dockerfile
    environment:
      KAFKA_BOOTSTRAP_SERVER: kafka:9092
    networks:
      - pp-network
    env_file: services/voting/.env
    ports:
      - "8082:8082"

  mongo:
    container_name: mongo
    image: mongo:latest
    ports:
      - '27017:27017'
    networks:
      - pp-network

  # mongo-seed:
  #   build:
  #     context: ./mongo-seed
  #     dockerfile: Dockerfile
  #   depends_on:
  #     - mongo
  #   networks:
  #     - pp-network

  web:
    container_name: web
    build:
      context: ./services/web/playlist-playoffs
      dockerfile: Dockerfile
    environment:
      - API_URL=http://localhost:8080
    ports:
      - "3000:80"
      - "3001:443"
    depends_on:
      - krakend
    networks:
      - pp-network
    restart: on-failure

  krakend:
    container_name: krakend
    build:
      context: ./services/gateway
      dockerfile: Dockerfile
    ports:
      - "8080:8080"
    environment:
      - AUDIENCE=https://dev-emkd7gpm4ah6eukc.us.auth0.com/api/v2/
      - GAME_HOST=http://game-service:8081
      - INFLUXDB_HOST=${INFLUXDB_HOST}
      - INFLUXDB_PORT=${INFLUXDB_PORT}
      - INFLUXDB_USER=${INFLUXDB_USER}
      - INFLUXDB_USER_PASSWORD=${INFLUXDB_USER_PASSWORD}
    networks:
      - pp-network

  grafana:
    container_name: grafana
    build:
      context: ./services/gateway/monitoring/grafana
      dockerfile: Dockerfile
    ports:
      - '4000:3000'
    environment:
      - INFLUXDB_HOST=${INFLUXDB_HOST}
      - INFLUXDB_PORT=${INFLUXDB_PORT}
      - INFLUXDB_USER=${INFLUXDB_USER}
      - INFLUXDB_USER_PASSWORD=${INFLUXDB_USER_PASSWORD}
    networks:
      - pp-network

  influxdb:
    container_name: influxdb
    image: influxdb:1.8.10
    environment:
      - INFLUXDB_DB=krakend
      - INFLUXDB_USER=${INFLUXDB_USER}
      - INFLUXDB_USER_PASSWORD=${INFLUXDB_USER_PASSWORD}
      - INFLUXDB_ADMIN_USER=admin
      - INFLUXDB_ADMIN_PASSWORD=admin_password
    ports:
      - '8086:8086'
    networks:
      - pp-network

volumes:
  kafka-data:
    driver: local
