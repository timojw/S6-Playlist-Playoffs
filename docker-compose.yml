version: '3.8'

networks:
  pp-network:
    driver: bridge

services:
  kafka:
    container_name: kafka
    image: "bitnami/kafka:latest"
    environment:
      - KAFKA_CFG_NODE_ID=0
      - KAFKA_CFG_PROCESS_ROLES=controller,broker
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092,PLAINTEXTLOCAL://:9094,CONTROLLER://:9093
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT,PLAINTEXTLOCAL:PLAINTEXT
      - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=0@kafka:9093
      - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://kafka:9092,PLAINTEXTLOCAL://localhost:9094
      - KAFKA_CFG_AUTO_CREATE_TOPICS_ENABLE=false
      - KAFKA_CFG_DELETE_TOPICS_ENABLE=false
    networks:
      - pp-network
    ports:
      - "9092:9092"
      - "9093:9093"
      - "9094:9094"
    expose:
      - "9092"
      - "9093"
      - "9094"
    volumes:
      - kafka-data:/bitnami/kafka

  kafka-ui:
    container_name: kafka-ui
    image: provectuslabs/kafka-ui:latest
    networks:
      - pp-network
    ports:
      - "9090:9090"
    environment:
      DYNAMIC_CONFIG_ENABLED: "false"
      KAFKA_CLUSTERS_0_NAME: kafka
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: kafka:9092

  game-service:
    depends_on:
      - kafka
      - kafka-ui
    container_name: game-service
    image: game-service:latest
    build:
      context: .
      dockerfile: services/game/Dockerfile
    networks:
      - pp-network
    env_file: services/game/.env
    ports:
      - "8081:8081"

  voting-service:
    depends_on:
      - kafka
      - kafka-ui
    container_name: voting-service
    image: voting-service:latest
    build:
      context: .
      dockerfile: services/voting/Dockerfile
    networks:
      - pp-network
    env_file: services/voting/.env
    ports:
      - "8082:8082"

  krakend:
    container_name: krakend
    build:
      context: ./services/gateway
      dockerfile: Dockerfile
    ports:
      - "8080:8080"
    environment:
      - AUDIENCE=https://dev-emkd7gpm4ah6eukc.us.auth0.com/api/v2/
      - GAME_HOST=http://game-service:8081
    networks:
      - pp-network

  web:
    container_name: web
    build:
      context: ./services/web/playlist-playoffs
      dockerfile: Dockerfile
    environment:
      - API_URL=http://localhost:8080
    ports:
      - "3000:80"
      - "3001:443"
    depends_on:
      - krakend
    networks:
      - pp-network
    restart: on-failure

volumes:
  kafka-data:
    driver: local
